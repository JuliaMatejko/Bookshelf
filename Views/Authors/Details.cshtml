@model Bookshelf.Models.Author
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@{
    ViewData["Title"] = "Author Details";
}

<h1>Details</h1>
<br />
<div>
    <h4>Author</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        @if (Model.SecondName != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SecondName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SecondName)
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            Author's Books
        </dt>
        <dd class="col-sm-10">
            @foreach (var book in Model.AuthorsBooks)
            {
                @book.Book.Title <br />
            }
        </dd>
    </dl>
</div>
<br />
<div>
    <a class="btn btn-outline-secondary" asp-action="Index"><i class="fas fa-angle-left"></i> Back to Author Database</a>
    @if (SignInManager.IsSignedIn(User))
    {
        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@Model.AuthorID">Edit <i class="far fa-edit"></i></a>
        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@Model.AuthorID">Delete <i class="far fa-trash-alt"></i></a>
    }
</div>
