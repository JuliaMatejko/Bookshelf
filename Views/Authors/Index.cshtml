@model IEnumerable<Bookshelf.Models.Author>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@{
    ViewData["Title"] = "Authors";
}

<h1>Author Database</h1>
<br />
<form asp-action="Index" method="get">
    <div class="form-actions no-color d-flex justify-content-between m-2 flex-wrap">
        <div>
            <input class="form-control w-auto d-inline-block" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-outline-primary mb-1" />
            <a class="btn btn-outline-secondary mb-1" asp-action="Index">Full list</a>
        </div>
        <div>
            @if (SignInManager.IsSignedIn(User))
            {
                <a class="btn btn-outline-success" asp-action="Create">Add a new author <i class="fas fa-plus"></i></a>
            }
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]">Author <i class="fas fa-sort"></i></a>
            </th>
            <th></th>
            </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.AuthorID">Details <i class="fas fa-angle-double-right"></i></a>
            </td>
        </tr>
    }
    </tbody>
</table>
