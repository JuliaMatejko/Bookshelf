@model IEnumerable<Bookshelf.Models.UserBook>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "My Books";
}

<h1>My Books (@User.Identity.Name)</h1>
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                Author
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book.Title)
            </th>
            <th></th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.BookStatus)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @{int count = 0;}
                @foreach (var i in item.Book.AuthorsBooks)
                {
                    count++;
                    @if (item.Book.AuthorsBooks.Count == count)
                    {
                        <span>@Html.DisplayFor(modelItem => i.Author.FullName)</span>
                    }
                    else
                    {
                        <span>@Html.DisplayFor(modelItem => i.Author.FullName), </span>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>
                <a class="btn btn-outline-info" asp-action="Details" asp-route-bookId="@item.BookID" asp-route-userId="@item.ApplicationUserID">Details <i class="fas fa-angle-double-right"></i></a>
            </td>
            <td class="text-center">
                @switch (item.BookStatus)
                {
                    case BookStatus.WantToRead:
                        <span class="badge badge-pill badge-primary book-status"> @Html.DisplayFor(modelItem => item.BookStatus) <i class="far fa-bookmark"></i></span>
                        break;
                    case BookStatus.ReadingRightNow:
                        <span class="badge badge-pill badge-info book-status"> @Html.DisplayFor(modelItem => item.BookStatus) <i class="fas fa-book-open"></i></span>
                        break;
                    case BookStatus.HaveRead:
                        <span class="badge badge-pill badge-success book-status"> @Html.DisplayFor(modelItem => item.BookStatus) <i class="fas fa-book"></i></span>
                        break;
                }
            </td>
        </tr>
        }
    </tbody>
</table>
